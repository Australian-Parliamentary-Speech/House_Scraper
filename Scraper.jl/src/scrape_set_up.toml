[ general_option ]
#put talker_name into content if talker name has interjecting in it
talker_name_into_content = true
#do you want to further separate by subdiv_1
sep_by_subdiv_1 = true
#is interjection under the node of questions and answers?
inter_under_node = true

[ which_sections ]

"QUESTIONS WITHOUT NOTICE" = true


[ question_option ]
#if for each p, look for the parent a node and scrape the talker from a, if off, the edit_ function will tribute the unknown speaker to the one above after edit_. But in the raw material it would be N/A
a_asparent = true

#limit the scope for questions and answers to questions without notice debate -- to be deleted
questions_without_notice = true

[ talker_option ]
#sometimes talk.text node is not listed as a node, so this is a potential solution. if no talk.text node is found, try scrape everything except talker information
get_all_text = true

[ section_xpaths ]

"QUESTIONS WITHOUT NOTICE" = ["/hansard/chamber.xscript/debate[18]", "/hansard/chamber.xscript/debate[20]"]


[ xpaths ]
#section_paths_list
##[...] question = section_path + //question
 question = "//question"
 answer = "//answer"
 #under question/answer node, maybe to talk.text//p???
 subdiv_1 = "//p"
 subdiv_1_talker = "//a"

 #interjections
 interjection = "//interjection"
 continue = "//continue"

 #get talker from any body of texts
 talk_node = "//talk.start"
 talk_content = "//talk.text"
 talker = "//talker"

 #what is the title of the section?
 debate_title = "/debateinfo/title"




